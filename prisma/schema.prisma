// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  SEDE
}

enum State {
  ACTIVE
  INACTIVE
  DELETE
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      Role
  Sede      Sedes?   @relation(fields: [sedeId], references: [id])
  sedeId    Int?
  state     State    @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Representative {
  id        Int      @id @default(autoincrement())
  name      String
  dni       String
  email     String?
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GeneralManager {
  id        Int      @id @default(autoincrement())
  name      String
  dni       String
  email     String?
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("general_manager")
}

model Supervisor {
  id        Int      @id @default(autoincrement())
  name      String
  dni       String
  email     String?
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id             Int             @id @default(autoincrement())
  name           String
  email          String
  razon_social   String
  ruc            String
  distrito       String
  provincia      String
  address        String
  state          State           @default(ACTIVE)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  Sedes          Sedes[]
  Representative Representative?
  GeneralManager GeneralManager?
  Supervisor     Supervisor?
}

model Sedes {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  email     String?
  Company   Company? @relation(fields: [companyId], references: [id])
  companyId Int?
  state     State    @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Directory {
  id           Int            @id @default(autoincrement())
  name         String
  state        State          @default(ACTIVE)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  SubDirectory SubDirectory[]
}

model SubDirectory {
  id               Int                @id @default(autoincrement())
  name             String
  Directory        Directory          @relation(fields: [directoryId], references: [id])
  directoryId      Int
  state            State              @default(ACTIVE)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  SubDirectoryYear SubDirectoryYear[]
}

model SubDirectoryYear {
  id             Int          @id @default(autoincrement())
  name           String
  SubDirectory   SubDirectory @relation(fields: [subDirectoryId], references: [id])
  subDirectoryId Int
  state          State        @default(ACTIVE)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("subdirectory_year")
}
